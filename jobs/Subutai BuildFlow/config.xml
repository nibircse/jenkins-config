<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.7">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.19">
    <script>#!groovy

node() {
	def mvnHome = tool &apos;M3&apos;
	String artifactDir = &apos;/tmp/jenkinsflow&apos;
	String debFileName = &apos;management-dev.deb&apos;
	String templateFileName = &apos;management-subutai-template_4.0.4-dev_amd64.tar.gz&apos;
	
	stage(&apos;Build deb/template of management&apos;)
	git url: &quot;https://github.com/subutai-io/base.git&quot;

	// prepare dir for builded artifacts
	sh &quot;&quot;&quot;
		if test ! -d ${artifactDir}; then mkdir /tmp/jenkinsflow; fi
	&quot;&quot;&quot;
	sh &quot;&quot;&quot;
		cd management
		${mvnHome}/bin/mvn clean install -Dmaven.test.skip=true -P deb -Dgit.branch=master
		find server/server-karaf/target/ -name *.deb | xargs -I {} mv {} ${artifactDir}/${debFileName}
	&quot;&quot;&quot;

	sh &quot;&quot;&quot;ssh root@gw.intra.lan &lt;&lt;- EOF
		set -e
		
		/apps/bin/subutai destroy management
		/apps/bin/subutai clone openjre8 management
		/bin/sleep 5
		/apps/bin/lxc-attach -n management -- apt-get update
		/apps/bin/lxc-attach -n management -- sync
		/apps/bin/lxc-attach -n management -- apt-get -y --force-yes install --only-upgrade procps
		/apps/bin/lxc-attach -n management -- apt-get -y --force-yes install --only-upgrade udev
		/bin/cp /mnt/lib/lxc/jenkins.p1/rootfs/tmp/jenkinsflow/management-dev.deb /mnt/lib/lxc/management/rootfs/tmp/
		/apps/bin/lxc-attach -n management -- apt-get -y --force-yes install subutai-dnsmasq subutai-influxdb curl gorjun
		/apps/bin/lxc-attach -n management -- dpkg -i /tmp/management-dev.deb
		/apps/bin/lxc-attach -n management -- sync
		/bin/rm /mnt/lib/lxc/management/rootfs/tmp/management-dev.deb
		/apps/bin/subutai export management -v 4.0.4-dev

		mv /mnt/lib/lxc/tmpdir/management-subutai-template_4.0.4-dev_amd64.tar.gz /mnt/lib/lxc/jenkins.p1/rootfs/tmp/jenkinsflow/
	EOF&quot;&quot;&quot;

	stage(&apos;Update management on test node&apos;)
	sh &quot;&quot;&quot;ssh root@52.59.236.52 &lt;&lt;- EOF
		set -e
		subutai destroy management
		rm /mnt/lib/lxc/tmpdir/management-subutai-template_*
	EOF&quot;&quot;&quot;

	sh &quot;&quot;&quot;
		scp /tmp/jenkinsflow/management-subutai-template_4.0.4-dev_amd64.tar.gz root@52.59.236.52:/mnt/lib/lxc/tmpdir
	&quot;&quot;&quot;

	sh &quot;&quot;&quot;ssh root@52.59.236.52 &lt;&lt;- EOF
		set -e
		sed -i -e &apos;s/cdn.subut.ai/cdn.local/g&apos; /apps/subutai/current/etc/agent.gcfg
		echo y | subutai import management
		sed -i -e &apos;s/cdn.local/cdn.subut.ai/g&apos; /apps/subutai/current/etc/agent.gcfg
		sed -i -e &apos;s/cdn.local/cdn.subut.ai/g&apos; /mnt/lib/lxc/management/rootfs/etc/apt/sources.list.d/subutai-repo.list
	EOF&quot;&quot;&quot;

	stage(&apos;Smoke tests&apos;)
    while( true ) {
        response = sh (script: &apos;curl -k -s -o /dev/null -w &quot;%{http_code}&quot; https://52.59.236.52:8443/rest/v1/peer/ready  || :&apos;, returnStdout: true)
        if (response==&quot;200&quot;) {break}
    }
	git url: &quot;https://github.com/subutai-io/playbooks.git&quot;
	sh &quot;&quot;&quot;
		./run_tests_qa.sh -m 52.59.236.52
		./run_tests_qa.sh -s all
		./run_tests_qa.sh -r
	&quot;&quot;&quot;
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>