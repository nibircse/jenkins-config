<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.27.0">
      <projectUrl>https://github.com/subutai-io/p2p/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.3.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>def</name>
        <refspec>+refs/tags/*:refs/remotes/origin/tags/*</refspec>
        <url>https://github.com/subutai-io/p2p</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/tags/*</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <browser class="hudson.plugins.git.browser.GithubWeb">
      <url>https://github.com/subutai-io/p2p</url>
    </browser>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jvnet.hudson.plugins.exclusion.CriticalBlockStart plugin="Exclusion@0.12"/>
    <hudson.tasks.Shell>
      <command>set +x
goenvDir=&quot;.goenv&quot;

if test ! -d ${goenvDir}; then mkdir -p ${goenvDir}/src/github.com/subutai-io/; fi
ln -s ${WORKSPACE} ${WORKSPACE}/${goenvDir}/src/github.com/subutai-io/p2p

export GOPATH=${WORKSPACE}/${goenvDir}
export GOBIN=${WORKSPACE}/${goenvDir}/bin
export GIT_BRANCH=tag
go get
go get golang.org/x/sys/windows

make all

# get current file id
function jsonval {
    temp=`echo $json | sed &apos;s/\\\\\//\//g&apos; | sed &apos;s/[{}]//g&apos; | awk -v k=&quot;text&quot; &apos;{n=split($0,a,&quot;,&quot;); for (i=1; i&lt;=n; i++) print a[i]}&apos; | sed &apos;s/\&quot;\:\&quot;/\|/g&apos; | sed &apos;s/[\,]/ /g&apos; | sed &apos;s/\&quot;//g&apos; | grep -w $prop`
    echo ${temp##*|}
}

URL=https://eu0.cdn.subut.ai:8338/kurjun/rest
USER=jenkins
AUTHID=$(curl -s -k &quot;$URL/auth/token?user=$USER&quot; | gpg --clearsign --no-tty)
token=$(curl -s -k -Fmessage=&quot;$AUTHID&quot; -Fuser=$USER &quot;$URL/auth/token&quot;)
dir=raw

p2pVersion=$(./p2p -v | cut -d &quot; &quot; -f 3 | tr -d &apos;\n&apos;)

filename=&quot;p2p&quot;
json=`curl -k -s -X GET $URL/raw/info?name=$filename`
prop=&apos;id&apos;
id=`jsonval`
curl -s -k -H &quot;token: $token&quot; -Ffile=@$filename -Fversion=$p2pVersion &quot;$URL/$dir/upload&quot;
# delete old file
curl -s -k -X DELETE &quot;$URL/$dir/delete?id=$id&amp;token=$token&quot;

filename=&quot;p2p.exe&quot;
json=`curl -k -s -X GET $URL/$dir/info?name=$filename`
prop=&apos;id&apos;
id=`jsonval`
curl -s -k -H &quot;token: $token&quot;  -Ffile=@$filename -Fversion=$p2pVersion &quot;$URL/$dir/upload&quot;
# delete old file
curl -s -k -X DELETE &quot;$URL/raw/delete?id=$id&amp;token=$token&quot;

filename=&quot;p2p_osx&quot;
json=`curl -k -s -X GET $URL/raw/info?name=$filename`
prop=&apos;id&apos;
id=`jsonval`
curl -s -k -H &quot;token: $token&quot;  -Ffile=@$filename -Fversion=$p2pVersion &quot;$URL/$dir/upload&quot;
# delete old file
curl -s -k -X DELETE &quot;$URL/raw/delete?id=$id&amp;token=$token&quot;

node(&quot;debian&quot;) {
  sh &quot;&quot;&quot;
    set -x
    rm -rf /tmp/p2p-packaging
    git clone git@github.com:optdyn/p2p-packaging.git /tmp/p2p-packaging
    cd /tmp/p2p-packaging
    wget --no-check-certificate https://eu0.cdn.subut.ai:8338/kurjun/rest/raw/get?name=p2p -O /tmp/p2p-packaging/linux/debian/p2p
    chmod +x /tmp/p2p-packaging/linux/debian/p2p
    ./configure --debian --branch=HEAD
    cd linux
    debuild -B -d
  &quot;&quot;&quot;
  String debfile = sh (script: &quot;&quot;&quot;
  set +x
  ls /tmp/p2p-packaging | grep .deb | tr -d &apos;\n&apos;
  &quot;&quot;&quot;, returnStdout: true)
  
  sh &quot;&quot;&quot;
  /tmp/p2p-packaging/upload.sh debian HEAD /tmp/p2p-packaging/${debfile}
  &quot;&quot;&quot;
}

node(&quot;mac&quot;) {
  sh &quot;&quot;&quot;
    set -x
    rm -rf /tmp/p2p-packaging
    git clone git@github.com:optdyn/p2p-packaging.git /tmp/p2p-packaging
    cd /tmp/p2p-packaging
    curl -fsSLk https://eu0.cdn.subut.ai:8338/kurjun/rest/raw/get?name=p2p_osx -o /tmp/p2p-packaging/darwin/p2p_osx
    chmod +x /tmp/p2p-packaging/darwin/p2p_osx
    /tmp/p2p-packaging/darwin/pack.sh /tmp/p2p-packaging/darwin/p2p_osx HEAD
    /tmp/p2p-packaging/upload.sh darwin HEAD /tmp/p2p-packaging/darwin/p2p.pkg
  &quot;&quot;&quot;
}

node(&quot;windows&quot;) {
notifyBuild(&apos;INFO&apos;, &quot;Packaging P2P for Windows&quot;)
stage(&quot;Packaging for Windows&quot;)
notifyBuildDetails = &quot;\nFailed on stage - Starting Windows Packaging&quot;

bat &quot;&quot;&quot;
  if exist &quot;C:\\tmp&quot; RD /S /Q &quot;c:\\tmp&quot;
  if not exist &quot;C:\\tmp&quot; mkdir &quot;C:\\tmp&quot;
  echo rm -rf /c/tmp/p2p-packaging &gt; c:\\tmp\\p2p-win.do
  echo git clone git@github.com:optdyn/p2p-packaging.git /c/tmp/p2p-packaging &gt;&gt; c:\\tmp\\p2p-win.do
  echo cd /c/tmp/p2p-packaging &gt;&gt; c:\\tmp\\p2p-win.do
  echo curl -fsSLk https://eu0.${env.BRANCH_NAME}cdn.subut.ai:8338/kurjun/rest/raw/get?name=p2p_osx -o /c/tmp/p2p-packaging/p2p.exe &gt;&gt; c:\\tmp\\p2p-win.do
  echo curl -fsSLk https://eu0.${env.BRANCH_NAME}cdn.subut.ai:8338/kurjun/rest/raw/get?name=tap-windows-9.21.2.exe -o /c/tmp/p2p-packaging/tap-windows-9.21.2.exe &gt;&gt; c:\\tmp\\p2p-win.do
  
  echo /c/tmp/p2p-packaging/upload.sh windows ${env.BRANCH_NAME} /c/tmp/p2p-packaging/windows/P2PInstaller/Release/P2PInstaller.msi &gt; c:\\tmp\\p2p-win-upload.do
  
  echo call &quot;C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\VsDevCmd.bat&quot; &gt; c:\\tmp\\p2p-pack.bat
  echo devenv.com c:\\tmp\\p2p-packaging\\windows\\win.sln /Rebuild Release &gt;&gt; c:\\tmp\\p2p-pack.bat
&quot;&quot;&quot;

notifyBuildDetails = &quot;\nFailed on stage - Deploying DevOps&quot;
bat &quot;c:\\tmp\\p2p-win.do&quot;

notifyBuildDetails = &quot;\nFailed on stage - Building package&quot;
bat &quot;c:\\tmp\\p2p-pack.bat&quot;

notifyBuildDetails = &quot;\nFailed on stage - Uploading Windows package&quot;
bat &quot;c:\\tmp\\p2p-win-upload.do&quot;
}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.1-SNAPSHOT">
      <teamDomain></teamDomain>
      <authToken></authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <room></room>
      <startNotification>true</startNotification>
      <notifySuccess>true</notifySuccess>
      <notifyAborted>true</notifyAborted>
      <notifyNotBuilt>true</notifyNotBuilt>
      <notifyUnstable>true</notifyUnstable>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.33">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>